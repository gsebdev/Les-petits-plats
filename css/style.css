@charset "UTF-8";
/* search */
/***
    The new CSS reset - version 1.8.2 (last updated 23.12.2022)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/
/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
 */
@import url("https://fonts.googleapis.com/css2?family=DM+Sans:wght@700&family=Lato:wght@400;700&family=Roboto:wght@400;700&display=swap");
*:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)) {
  all: unset;
  display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a, button {
  cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol, ul, menu {
  list-style: none;
}

/* For images to not be able to exceed their container */
img {
  max-inline-size: 100%;
  max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
  border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input, textarea {
  -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
  white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
  -webkit-appearance: revert;
  appearance: revert;
}

/* preformatted text - use only for this feature */
pre {
  all: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
  color: unset;
}

/* remove default dot (â€¢) sign */
::marker {
  content: "";
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
  display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly.
   - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
:where([contenteditable]:not([contenteditable=false])) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  -webkit-line-break: after-white-space;
  -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable=true]) {
  -webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
  all: revert;
}

body {
  font-family: "Lato", sans-serif;
  font-size: 18px;
  font-weight: 400;
}

h1 {
  font-family: "DM Sans", sans-serif;
  font-weight: 700;
  font-size: 2em;
  color: #D04F4F;
}

p {
  font-family: "Roboto", sans-serif;
  font-size: 0.67em;
}

body {
  padding: 42px 100px;
}

header {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.main-search {
  position: relative;
  display: flex;
  justify-content: center;
  height: 69px;
  background-color: #E7E7E7;
  border-radius: 5px;
  margin: 17px 0;
}
.main-search__input {
  width: 100%;
  padding: 0 69px 0 24px;
}
.main-search__input::placeholder {
  opacity: 0.25;
}
.main-search__label {
  position: absolute;
  right: 0;
  height: 100%;
  padding: 18.1578947368px;
}

.filter {
  border-radius: 5px;
  width: fit-content;
  color: white;
}
.filter__input {
  height: 69px;
  position: relative;
}
.filter__input i {
  display: block;
  position: absolute;
  right: 0;
  top: 0;
  height: 100%;
  align-items: center;
  display: flex;
  background: url("../images/arrow.svg") center no-repeat;
  width: 60px;
  transform: rotate(180deg);
}
.filter__input input {
  height: 100%;
  padding-left: 15px;
}
.filter__input input::placeholder {
  font-weight: 700;
}
.filter__list {
  display: none;
}
.filter--blue {
  background-color: #3282F7;
}

/*# sourceMappingURL=style.css.map */
